using System;

namespace Project
{
    class Names
    {
        static void Main()
        {
            try
            {
                var userInput = GetUserInput();
                string[] splitInput = Split(userInput);
                findIncorrectValue(splitInput);
                var sortValue = Sort(splitInput);
                DisplayResult(sortValue);
            }
            catch (Exception ex)
            {
                DisplayError(ex);
            }
        }

        private static string? GetUserInput()
        {
            Console.Write("Enter the names separated by commas:");
                return Console.ReadLine();
        }

        private static string[] Split(string userInput)
        {
            string[] names = userInput.Split(new char[] { ',' });
                return names;
        }

        private static string Sort(string[] validateInput)
        {
            for (int i = 0; i < validateInput.Length; i++)
            {
                validateInput[i] = validateInput[i].Trim(new char[] {' '});
                
                for (int j = 0; j < validateInput.Length; j++)
                {
                    validateInput[j] = validateInput[j].Trim(new char[] {' '});
                    int result = string.Compare(validateInput[i], validateInput[j]);
                    
                    if (result < 0)
                    {
                        var storage = validateInput[i];
                        validateInput[i] = validateInput[j];
                        validateInput[j] = storage;
                    }
                    
                    else if (result > 0)
                    {
                        
                    }

                    else
                    {

                    }
                }
            }
                
                string sortValues = string.Join(", ", validateInput);
                return sortValues;
        }

        private static void findIncorrectValue(string[] inValue)
        {
            for (int k = 0 ; k < inValue.Length; k++)
                    {
                        if (string.IsNullOrEmpty(inValue[k]))
                        {
                            throw new ArgumentException("input is empty!");
                        }

                        if (int.TryParse(inValue[k], out int number))
                        {
                            Console.WriteLine("You intered the number {0}", number);
                            throw new ArgumentException ("input has an integer value!");
                        }

                        if (inValue[k] == string.Empty)
                        {
                            Console.WriteLine("written white space field");
                            throw new ArgumentException ("input has a null value!");
                        }

                        // bool hasSpace = inValue[k].Contains(" ");
                        // if (hasSpace)
                        // {
                        //     throw new ArgumentException("whitespace in one or more of your input names!");
                        // }
                    }
                
        }
        private static void DisplayError(Exception ex)
        {
            Console.ForegroundColor = ConsoleColor.DarkRed;
            Console.WriteLine(ex.Message);
            Console.ResetColor();
        }

        private static void DisplayResult(string? names)
        {
            Console.WriteLine("Names sorted in order: {0}", names);
        }
    }
}
